parameters:

php:
	date.timezone: Europe/Prague

application:
	errorPresenter: Error

database:
	default:
		dsn: '%database.driver%:host=%database.host%;dbname=%database.dbname%'
		user: %database.user%
		password: %database.password%
		reflection: discovered
		autowired: true

mail:
	smtp: %mailer.smtp%
	host: %mailer.host%
	port: %mailer.port%
	username: %mailer.username%
	password: %mailer.password%
	secure: %mailer.secure%

session:
	autoStart: true
	gc_maxlifetime: 1209600
	savePath: ./temp/sessions

extensions:
	rabbitmq: Contributte\RabbitMQ\DI\RabbitMQExtension
	console: Contributte\Console\DI\ConsoleExtension(true)

services:
	- App\AuthorizatorFactory::create
	loggerHandler: Ludoi\Utils\Logger\Handler\FileHandler(%logger.folder%)
	logger: Ludoi\Utils\Logger\Logger(@loggerHandler)
	database: @Nette\Database\Context
	authenticator: App\Authenticate
	routerFactory: App\RouterFactory
	router: @routerFactory::createRouter
	users: App\Users
	points: App\Points
	routes: App\Routes
	chats: App\Chats
	plans: App\Plans
	cups: App\Cups
	results: App\Results
	usersChanges: App\UsersChanges
	cupsRacers: App\CupsRacers
	cupsRoutes: App\CupsRoutes
	articles: App\Articles
	weather: App\Weather
	measurements: App\Measurements
	messages: App\Messages
	- App\EmailConsumer
	- App\EmailQueue(@Contributte\RabbitMQ\Client::getProducer(emailProducer))
	- App\GPXConsumer
	- App\GPXQueue(@Contributte\RabbitMQ\Client::getProducer(gpxProducer))
	- App\ProfileControlFactory
	- App\ChatControlFactory
	- App\PlanControlFactory
	- App\ResultEnterControlFactory
	- App\ResultOrderControlFactory
	- App\ResultCupControlFactory
	- App\CupSelectionControlFactory
	- App\StartControlFactory
	- App\Console\WeatherDownloadCommand
	- App\WeatherAssign
	- App\Console\WeatherAssignCommand
	- App\Console\ResultsCommand
	- App\ResultsCalculation
	- App\ResultsOverall
	- App\Categories
	- App\RacersCategories
	- App\Console\ResultsCategoriesCommand
	- App\Followers
	- App\ResultsRacers

rabbitmq:
	connections:
		default:
			user: %rabbitconf.user%
			password: %rabbitconf.password%
			host: rabbitmq-main
			port: 5672
			vhost: covidcup
			lazy: false

	queues:
		emailQueue:
			connection: default
			# force queue declare on first queue operation during request
			autoCreate: true
		gpxQueue:
			connection: default
			# force queue declare on first queue operation during request
			autoCreate: true

#	exchanges:
#		emailExchange:
#			connection: default
#			type: fanout
#			queueBindings:
#				emailQueue:
#					routingKey: testRoutingKey
#			# force exchange declare on first exchange operation during request
#			autoCreate: true

	producers:
		emailProducer:
#			exchange: emailExchange
			queue: emailQueue
			contentType: application/json
			deliveryMode: 2 # Producer::DELIVERY_MODE_PERSISTENT
		gpxProducer:
#			exchange: emailExchange
			queue: gpxQueue
			contentType: application/json
			deliveryMode: 2 # Producer::DELIVERY_MODE_PERSISTENT

	consumers:
		emailConsumer:
			queue: emailQueue
			callback: [@App\EmailConsumer, consume]
			qos:
				prefetchSize: 0
				prefetchCount: 5
		gpxConsumer:
			queue: gpxQueue
			callback: [@App\GPXConsumer, consume]
			qos:
				prefetchSize: 0
				prefetchCount: 5